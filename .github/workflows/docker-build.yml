on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string
      tag:
        required: true
        type: string
      repository:
        required: true
        type: string
      target:
        required: false
        type: string
      build-args:
        required: true
        type: string
      cache-from:
        required: false
        type: string
    secrets:
      username:
        required: true
      password:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Setup build variables
        run: |
          echo "${{ inputs.build-args }}" | awk NF > ${{ runner.temp }}/build-args.env
          echo "${{ inputs.cache-from }}" | awk NF > ${{ runner.temp }}/cache-from.env

      - name: Login to ${{ inputs.repository }}
        uses: docker/login-action@v1
        with:
          registry: ${{ inputs.repository }}
          username: ${{ secrets.username }}
          password: ${{ secrets.password }}

      - name: Pull docker build cache
        run: |
          while read image; do
             docker pull "$image" || /bin/true
          done < ${{ runner.temp }}/cache-from.env

      - uses: actions/checkout@v2

      - name: Build docker image
        run: |
          docker build -t ${{ inputs.repository }}/${{ inputs.image }}:${{ inputs.tag }} \
          $(cat ${{ runner.temp }}/build-args.env | sed 's@^@--build-arg @g' | paste -s -d " ") \
          $(cat ${{ runner.temp }}/cache-from.env | sed 's@^@--cache-from @g' | paste -s -d " ") \
          $([[ ! -z "${{ inputs.target }}" ]] && echo "--target ${{ inputs.target }}")
          -f Dockerfile .

      - name: Push docker image
        run: |
          docker push ${{ inputs.repository }}/${{ inputs.image }}:${{ inputs.tag }}
